The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is a test text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

    >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(1, -1)
    0

    >>> add_integer(5, 5.2)
    10

    >>> add_integer(1, "B")
    Traceback (most recent call last):
    ...
    TypeError: b must be an integer

    >>> add_integer("test", 10)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(None)
    Traceback (most recent call last):
    ...
    TypeError: a must be an integer

    >>> add_integer(2)
    100

    >>> add_integer(6.7, 3)
    9

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ...
    ValueError: cannot convert float NaN to integer

    >>> add_integer(float('Inf'))
    Traceback (most recent call last):
    ...
    OverflowError: cannot convert float infinity to integer
